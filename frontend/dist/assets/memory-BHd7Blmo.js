function y(e){const t=localStorage.getItem(e.app.STORAGE_KEY);return t?JSON.parse(t):[]}function M(e,t,a,g,s){const o=[],r=e.web.canvas,f=e.web.counter;if(!r)return[];const m=r.getContext("2d");if(!m)return[];t.resizeToContainer(r);const S=Date.now(),p=y(e);m.clearRect(0,0,r.width,r.height);for(const d of p){const n=g.math.weightedRandom(e.graves.minSize,e.graves.maxSize,e.graves.weight.small),h=n;let i=0,c=0,u=0,l=!1;for(;u<e.graves.maxAttempts&&!l;){i=Math.random()*(r.width-n-e.graves.padding*2)+e.graves.padding,c=Math.random()*(r.height-h-e.graves.padding*2)+e.graves.padding,l=!0;for(const v of o){const w=v.x-i,x=v.y-c,b=(v.width+n)/2+e.graves.padding;if(Math.sqrt(w*w+x*x)<b){l=!1;break}}u++}o.push({x:i,y:c,width:n,height:h,memory:d});const R=s.decay.getDecayClass(d.createdAt,S),G=d.text.slice(0,12);a.draw(m,{x:i,y:c,width:n,height:h,decay:R,previewText:G},s)}return f&&(f.textContent=`Memories buried: ${p.length}`),o}function A(e,t,a,g,s){return M(e,t,a,g,s)}function C(e,t){localStorage.setItem(t.app.STORAGE_KEY,JSON.stringify(e))}const D={load:y,render:M,reRender:A,save:C};export{y as loadMemories,D as memoryFns,A as reRenderMemories,M as renderMemories,C as saveMemories};
